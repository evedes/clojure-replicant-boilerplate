{"version":3,"sources":["portfolio/ui/client.cljs"],"mappings":"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","names":["p__51747","map__51748","cljs.core/--destructure-map","cljs.core.get","portfolio.ui.client/render","app","on-render","cljs.core/deref","state","page-data","portfolio.ui.core/prepare-data","app-data","portfolio.ui.actions/actionize-data","cljs.core/ifn?","temp__5821__auto__","el","js/document.getElementById","dumdom.core/render","portfolio.ui.components.app/App","js/console.error","portfolio.ui.client/a-element","and__5000__auto__","cljs.core._EQ_","portfolio.ui.client/get-path","href","cljs.core/not-empty","js/location.origin","portfolio.ui.client/relay-body-clicks","e","path","G__51749","cljs.core/re-find","or__5002__auto__","js/window","cljs.core.println","js/history","portfolio.ui.actions/execute-action!","portfolio.ui.client/add-once-listener","event","f","_e","listener","var_args","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","portfolio.ui.client/add-load-listener","p__51753","vec__51754","cljs.core.nth","seq51750","G__51751","cljs.core/first","cljs.core/next","G__51752","self__5711__auto__","error","js/document.body","portfolio.ui.client/css-file","portfolio.ui.client/css-load-error","portfolio.ui.client/ensure-portfolio-css!","cljs.core/not","portfolio.ui.css/create-css-link","portfolio.ui.client.add_load_listener","js/document.head","portfolio.ui.client/ensure-element!","js/document.createElement","script","portfolio.ui.client/set-window-size","dim","js/window.innerWidth","js/window.innerHeight","cljs.core.swap_BANG_","cljs.core/assoc","portfolio.ui.client/set-window-size-debounced","portfolio.homeless/debounce","portfolio.ui.client/keep-size-up-to-date","js/window.onresize","portfolio.ui.client/keep-css-files-up-to-date","observer","portfolio.ui.css/watch-css-reloads","portfolio.ui.client/started?","portfolio.ui.client/start-app","p__51761","vec__51762","map__51765","seq51759","G__51760","portfolio.ui.css/load-css-files","p1__51757#","js/document.body.addEventListener","js/window.onpopstate","p1__51758#","cljs.core/add-tap","cljs.core/update","cljs.core/conj","cljs.core/add-watch","_","location","portfolio.ui.routes/get-current-location","portfolio.ui.collection/get-selection","portfolio.ui.routes/get-id","id","cljs.core.sort_by","cljs.core/vals","G__51766","cljs.core.assoc","js/document"],"sourcesContent":["(ns portfolio.ui.client\n  \"Bootstrap and render a Portfolio UI app instance\"\n  (:require [dumdom.core :as d]\n            [portfolio.homeless :as h]\n            [portfolio.ui.actions :as actions]\n            [portfolio.ui.collection :as collection]\n            [portfolio.ui.components.app :refer [App]]\n            [portfolio.ui.core :as portfolio]\n            [portfolio.ui.css :as css]\n            [portfolio.ui.routes :as routes]))\n\n(defn render [app {:keys [on-render]}]\n  (let [state @app\n        page-data (portfolio/prepare-data state (:location state))\n        app-data (actions/actionize-data app page-data)]\n    (when (ifn? on-render)\n      (on-render page-data))\n    (if-let [el (js/document.getElementById \"portfolio\")]\n      (d/render (App app-data) el)\n      (js/console.error \"Unable to render portfolio: no element with id \\\"portfolio\\\"\"))))\n\n(defn- a-element [el]\n  (loop [el el]\n    (cond\n      (nil? el) nil\n      (and (.-href el)\n           (= \"A\" (.-tagName el))) el\n      :else (recur (.-parentNode el)))))\n\n(defn- get-path [href]\n  (when (not-empty href)\n    (.replace href js/location.origin \"\")))\n\n(defn relay-body-clicks [app e]\n  (let [path (some->> (.-target e) a-element .-href get-path)]\n    (when (and path (re-find #\"^/\" path))\n      (.preventDefault e)\n      (if (or e.ctrlKey e.metaKey)\n        (.open js/window path \"_blank\")\n        (do\n          (when (:log? @app)\n            (println \"Update URL from body click\" path))\n          (.pushState js/history false false path)\n          (actions/execute-action! app [:go-to-current-location]))))))\n\n(defn add-once-listener [el event f]\n  (.addEventListener el event (fn listener [_e]\n                                (.removeEventListener el event listener)\n                                (f))))\n\n(defn add-load-listener [el f & [error]]\n  (.addEventListener\n   el \"load\"\n   (fn listener [_e]\n     (.removeEventListener el \"load\" listener)\n     (.removeEventListener el \"error\" listener)\n     (f)))\n  (.addEventListener\n   el \"error\"\n   (fn listener [_e]\n     (.removeEventListener el \"load\" listener)\n     (.removeEventListener el \"error\" listener)\n     (if error\n       (set! (.-innerHTML js/document.body) error)\n       (f)))))\n\n(def css-file \"/portfolio/styles/portfolio.css\")\n\n(def css-load-error\n  (str\n   \"<h1>Unable to load the Portfolio CSS</h1>\"\n   \"<p>Portfolio needs to load its CSS file \" css-file\n   \"in order to render its UI. Make sure Portfolio's resources are served from \"\n   \"your web server. If you are using shadow-cljs, you'll need something like \"\n   \"the following:</p>\"\n   \"<pre><code>:dev-http {8080 [\\\"public\\\" \\\"classpath:public\\\"]}</code></pre>\"))\n\n(defn ensure-portfolio-css! [f]\n  (if-not (js/document.getElementById \"portfolio-css\")\n    (let [el (css/create-css-link css-file)]\n      (add-load-listener el f css-load-error)\n      (.appendChild js/document.head el))\n    (f)))\n\n(defn ensure-element! [f]\n  (if-not (js/document.getElementById \"portfolio\")\n    (let [el (js/document.createElement \"div\")\n          script (js/document.createElement \"script\")]\n      (set! (.-id el) \"portfolio\")\n      (.appendChild js/document.body el)\n      (set! (.-type script) \"text/javascript\")\n      (set! (.-src script) \"/portfolio/prism.js\")\n      (add-load-listener script f)\n      (.appendChild js/document.body script))\n    (f)))\n\n(defn set-window-size [app]\n  (let [dim {:w js/window.innerWidth\n             :h js/window.innerHeight}]\n    (swap! app assoc :win dim)))\n\n(def ^:private set-window-size-debounced (h/debounce set-window-size 100))\n\n(defn keep-size-up-to-date [app]\n  (set-window-size app)\n  (set! js/window.onresize #(set-window-size-debounced app)))\n\n(defn keep-css-files-up-to-date [app]\n  (when-not (::css-listener @app)\n    (let [observer (css/watch-css-reloads (:css-paths @app))]\n      (swap! app assoc ::css-listener observer))))\n\n(defn started? [app]\n  (::started? @app))\n\n(defn start-app [app & [{:keys [on-render]}]]\n  (let [f (fn []\n            (css/load-css-files (:css-paths @app))\n            (if (started? app)\n              (render app {:on-render on-render})\n              (do\n                (js/document.body.addEventListener \"click\" #(relay-body-clicks app %))\n                (keep-size-up-to-date app)\n                (keep-css-files-up-to-date app)\n                (ensure-element!\n                 (fn []\n                   (ensure-portfolio-css!\n                    (fn []\n                      (set! js/window.onpopstate (fn [] (actions/execute-action! app [:go-to-current-location])))\n                      (add-tap #(swap! app update :taps conj %))\n                      (add-watch app ::render (fn [_ _ _ _] (render app {:on-render on-render})))\n                      (actions/execute-action!\n                       app\n                       (let [location (routes/get-current-location)]\n                         (if (nil? (collection/get-selection @app (routes/get-id location)))\n                           (if-let [id (:id (first (sort-by :id (vals (:scenes @app)))))]\n                             [:go-to-location {:query-params {:id id}}]\n                             [:go-to-location\n                              (cond-> location\n                                (nil? (-> location :query-params :doc))\n                                (assoc :query-params {:doc \"up-and-running\"}))])\n                           [:go-to-current-location])))\n                      (swap! app assoc ::started? true))))))))]\n    ;; Portfolio used to just start at will, and would crash when loaded from\n    ;; <head> This little indirection means Portfolio still starts synchronously\n    ;; when loaded from <body>, but now also starts when being loaded in <head>,\n    ;; although asynchronously.\n    (if (and js/document js/document.body)\n      (f)\n      (add-once-listener js/window \"DOMContentLoaded\" f)))\n  app)\n"],"x_google_ignoreList":[0]}